server {
    # Listen on both ports to be flexible
    listen 3000 default_server;
    listen [::]:3000 default_server;
    
    root /usr/share/nginx/html;
    index index.html;

    # Allow any site
    server_name _;

    # Handle all locations
    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        try_files $uri $uri/ /index.html =404;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # No cache for root
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Assets with caching
    location /assets {
        expires 1y;
        add_header Cache-Control "public, no-transform";
    }

    # Health check endpoint
    location /health {
        access_log off;
        add_header 'Content-Type' 'text/plain';
        return 200 'healthy';
    }

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript;
    gzip_disable "MSIE [1-6]\.";

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Prevent access to . files
    location ~ /\. {
        deny all;
    }

    # Handle errors by serving index.html
    error_page 404 =200 /index.html;
} 